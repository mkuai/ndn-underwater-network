<ns3modulegen_core_customizations.SmartPointerTransformation object at 0x7fedd4598a90>
>>>>>>>>>>>>>>>> []
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ApplicationContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ApplicationContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd448f190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::ndn::FaceContainer>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::ndn::FaceContainer>' => success ((<class 'ns3_ptr.ThisClassNs3PtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd448f850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x7fedd4598a90>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd448fc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::ndn::FaceContainer>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::ndn::FaceContainer>' => success ((<class 'ns3_ptr.ThisClassNs3PtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd448ff90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string const&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string const&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd449d210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::ndn::FaceContainer>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::ndn::FaceContainer>' => success ((<class 'ns3_ptr.ThisClassNs3PtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd449d5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::NodeContainer&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::NodeContainer&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd449d890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::ndn::FaceContainer>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::ndn::FaceContainer>' => success ((<class 'ns3_ptr.ThisClassNs3PtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd449dc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44a5290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44a53d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44a57d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44a5910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44a5a90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44a5c10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44a5d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44a5f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44af0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44af250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44af3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44af850>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44af990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44afd90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44afed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44b5090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44b5210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44b5390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44b5510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44b5690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44b5810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44b5990>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44b5b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44b5f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44bd110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44bd290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44bd410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44bd510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44bd910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x7fedd4598a90>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44bdc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Name&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Name&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44bdc10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint32_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedIntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44bddd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44bded0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44c5290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x7fedd4598a90>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44c55d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Name&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Name&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44c55d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::shared_ptr<ns3::ndn::Face>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::shared_ptr<ns3::ndn::Face>' => success ((<class 'pybindgen.typehandlers.smart_ptr.ThisClassSharedPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44c5790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44c5950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44c5cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x7fedd4598a90>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd444b050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Name&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Name&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44c5e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x7fedd4598a90>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd444b3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd444b3d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd444b750>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd444b8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd444ba50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd444bbd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int32_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int32_t' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd444bd50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4454110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x7fedd4598a90>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4454450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4454450>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4454650>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4454b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::NodeContainer&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::NodeContainer&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4454c90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4454e50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd445a090>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd445a510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd445a690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd445a810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd445acd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4462110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4462250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44626d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4462810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::AttributeValue&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::AttributeValue&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4462910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ApplicationContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ApplicationContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4462dd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::NodeContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::NodeContainer' => success ((<class 'pybindgen.cppclass.ThisClassParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4462f50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ApplicationContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ApplicationContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4469390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x7fedd4598a90>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44696d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ApplicationContainer')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ApplicationContainer' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4469950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4469b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4472210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x7fedd4598a90>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4472510>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4472810>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::NodeContainer&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::NodeContainer&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4472950>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4472d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd447b250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd447b390>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Node>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Node>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Node *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x7fedd4598a90>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd447b6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd447b9d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd447bb10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd447bc90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44820d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4482250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::NodeContainer&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::NodeContainer&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd44823d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4482890>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4482cd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd440c150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::name::Component&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::name::Component&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd440c5d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Name&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Name&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd440cb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4414050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ndn::Name &')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ndn::Name &' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4414490>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::name::Component&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::name::Component&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4414610>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::name::Component&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::name::Component&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4414b10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int' => success ((<class 'pybindgen.typehandlers.inttype.IntParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4414d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ndn::Name')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ndn::Name' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd441b190>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd441b2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd441b6d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::string')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::string' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd441bb50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::name::Component&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::name::Component&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4424050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ndn::name::Component')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ndn::name::Component' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4424790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4424910>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ndn::name::Component')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ndn::name::Component' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4424d10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4424e90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('unsigned char')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'unsigned char' => success ((<class 'pybindgen.typehandlers.inttype.UInt8Param'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4424f90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::ndn::name::Component')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ndn::name::Component' => success ((<class 'pybindgen.cppclass.ThisClassReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd442b410>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const std::string&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const std::string&' => success ((<class 'pybindgen.typehandlers.stringtype.StdStringRefParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd442b590>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Interest&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Interest&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd442ba50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Data&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Data&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4433210>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::ndn::L3Protocol>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::ndn::L3Protocol>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::ndn::L3Protocol *' => success ((<class 'pybindgen.cppclass.ThisClassPtrReturn'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x7fedd4598a90>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4433b50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('ns3::Ptr<ns3::Object>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Ptr<ns3::Object>' => failure
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'ns3::Object *' => success ((<class 'pybindgen.cppclass.ThisClassPtrParameter'>, <ns3modulegen_core_customizations.SmartPointerTransformation object at 0x7fedd4598a90>, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4433e10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::shared_ptr<ns3::ndn::nfd::Forwarder>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::shared_ptr<ns3::ndn::nfd::Forwarder>' => success ((<class 'pybindgen.typehandlers.smart_ptr.ThisClassSharedPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd443d150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('int64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'int64_t' => success ((<class 'pybindgen.typehandlers.inttype.LongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd443d690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::Fib&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::Fib&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd443db10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::Pit&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::Pit&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4446050>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::Cs&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::Cs&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4446550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4446a50>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::fib::Entry&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::fib::Entry&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd4446f10>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd43ce150>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Name&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Name&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd43ce290>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd43ce790>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::fib::Entry&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::fib::Entry&' => success ((<class 'pybindgen.cppclass.ThisClassRefParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd43ce8d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd43ced90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::shared_ptr<ns3::ndn::Face>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::shared_ptr<ns3::ndn::Face>' => success ((<class 'pybindgen.typehandlers.smart_ptr.ThisClassSharedPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd43ceed0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Name&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Name&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd43d63d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::fib::NextHopList&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::fib::NextHopList&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd43d68d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('bool')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'bool' => success ((<class 'pybindgen.typehandlers.booltype.BoolReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd43d6d90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::shared_ptr<ns3::ndn::Face>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::shared_ptr<ns3::ndn::Face>' => success ((<class 'pybindgen.typehandlers.smart_ptr.ThisClassSharedPtrParameter'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd43de250>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('std::shared_ptr<ns3::ndn::Face>')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'std::shared_ptr<ns3::ndn::Face>' => success ((<class 'pybindgen.typehandlers.smart_ptr.ThisClassSharedPtrReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd43de690>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('void')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'void' => success ((<class 'pybindgen.typehandlers.voidtype.VoidReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd43deb90>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongParam'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd43decd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('uint64_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'uint64_t' => success ((<class 'pybindgen.typehandlers.inttype.UnsignedLongLongReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd43e6110>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd43e6550>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::fib::NextHop&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::fib::NextHop&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd43e69d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd43e6bd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::pit::Entry&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::pit::Entry&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd43ef0d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Interest&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Interest&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd43ef2d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Name&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Name&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd43ef7d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('size_t')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'size_t' => success ((<class 'pybindgen.typehandlers.inttype.SizeTReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd43efcd0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::nfd::cs::Entry&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::nfd::cs::Entry&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd43f81d0>))
DEBUG:pybindgen.typehandlers:TypeMatcher.lookup('const ns3::ndn::Name&')
DEBUG:pybindgen.typehandlers:try to lookup type handler for 'const ns3::ndn::Name&' => success ((<class 'pybindgen.cppclass.ThisClassRefReturn'>, None, <pybindgen.typehandlers.ctypeparser.TypeTraits object at 0x7fedd43f83d0>))
